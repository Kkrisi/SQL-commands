SHOW databases;
CREATE DATABASE IF NOT EXISTS "adatbázisnév";
USE "adatbázis neve";                           pl: use sargabt;
CREATE TABLE "alkatrészek";
SHOW tables,
SELECT * FROM "tábla neve";                     pl: select * from ugyfelek;


CREATE USER "felhasználónév@számítógépnév" IDENTIFIED BY 'jelszó';          pl: create user kristof@mycomputer identified by 'cisco'
SET PASSWORD FOR "felhasználónév@számítógépnév" = PASSWORD ('jelszó');      pl: set password for kristof@mycomputer = password ('cisco2.0')
FLUSH PRIVILEGES;                                                           jelszó változtatásnál ezzel kell frissíteni


SHOW GRANTS;                                                                                   összes jogosultság megnézése
GRANT "jogosultság" ON "táblanév" TO "felhasználónév@számítógépnév" IDENTIFIED BY 'jelszó';    pl: grant select on esernyők to phpfelhasználó@localhost identified by 'A41!14a!';
FLUSH PRIVILEGES;


REVOKE "jogosultság" ON "táblanév" FROM "felhasználónév@számítógépnév";      pl: REVOKE alter ON esernyők FROM janos123@janoshost;
REVOKE all ON *.* FROM "felhasználónév@számítógépnév";                      pl: REVOKE all ON *.* FROM vector@vectorcomputer;       minden jogosultsag visszavonása egy fióktól;
DROP USER "felhasználónév@számítógépnév";                                    pl: DROP USER lajos123@lajoskingdom;       fiók törlése
DROP DATABASE "adatbázisnév";                                                adatbázis törlése


EXPLAIN "táblanév";         pl: explain "user";         tábla felépítését láthatjuk
DROP TABLE "táblanév";      pl: drop table "user";


ADD "oszlopnév" "definíció";                  új oszlopot szúr be, a definíció tartalmazza az adattípust és a lehetséges definíciókat is
ALTER "oszlopnév" SET DEFAULT "érték";        módosítja egy oszlop alapértelmezett értékét
ALTER "oszlopnév" DROP DEFAULT;               eltávolítja egy oszlop alapértelmezett értékét

(CHAR,	VARCHAR(),	TEXT,	INT(),	BIGINT,	DECIMAL(,),	DATE,	TIME,	DATETIME,	ENUM(,),	SERIAL)


ALTER "oszlopnév" DROP DEFAULT			eltávolítja egy oszlop alapértelmezett értékét
CHANGE "oszlopnév" "újoszlopnév"		módosítja az oszlop nevét
DROP "szolopnév"				töröl egy oszlopot
MODIFY "oszlopnév" "deifiníció"			módosítja az oszlop definícióját
RENAME "újtáblanév"				átnevezi a táblát


INSERT INTO "táblanév" (...)			adat beszúrás
SELECT COUNT(*) FROM "táblanév"			megszámolja a rekordokat


ORDER BY "oszlopnév"
ORDER BY DESC "oszlopnév"
GROUP BY "oszlopnév"


















create database pata;
use pata;

create table kerekparok (
	az int not null primary key auto_increment,
	szin varchar(50),
	marka varchar(50),
	ar double,
	kategoriaId int
);

creat table kategoriak (
	az int not null primary key auto_increment,
	nev varchar(50)
);

insert into kategoriak
(nev)
values
('városi'),
('országúti'),
('gyerek'),
('elektromos'),
('trekking');

insert into kerekparok
(szin, marka, ar, kategoriaId)
values
('fehér', 'Csepel', 178900, 5),
('szürke', 'Neuzer', 172900, 5),
('fehér', 'KTM', 256850, 5);



Táblák összekapcsolása

select szin, marka, ar, nev
from kerekparok inner join kategoriak

select * from kategoriak;

select szin, marka, ar, nev
from kerekparok inner join kategoriak
on kerekparok.kategoriaId = kategoriak.az;

select kerekparok.az, szin, marka, ar, nev
from kerekparok inner join kategoriak
on kerekparok.kategoriaId = kategoriak.az;

update kerekparok
set ar = 560900
where az = 2; 

vasarlasok=(az, kerekparAz, ugyfelAz, datum)
ugyfelek=(az, nev)

mysqldump pata > pata.sqly
apt install smbclient







2022-02-28
Linuxon:
apt update
apt install mariadb-server
mysql
mysql zoldzrt < /home...zoldzrt.sql      belerakjuk a zoldzrt adatbazisba a swl fajlt
collate utf8_hunagrian_ci; 			magyar sorrendbe állítja az abc-t 

winSCP.exe         winSCP segítségével töltünk fel fájlokat linuxra, windowsos gépekről
ER-modell, 2 táblás lekérdezés











-- Kádár Kristóf, 2022-02-28
-- Beszúrás a zöld zrt adatbázisába

insert into szemelyek
(nev, fizetes, telepules, jutalom, lakcim, beosztasAz)
values
("Lakos Kázmér", 2830000, "Miskolc", 800000, "Pata u. 18.", 2);

insert into beosztasok
(nev, leiras)
values
("kacsász", "");

update szemelyek
set
nev="Gipsz Jakab",
anyja_neve="Purhab Mária",
telepules="Bugyi",
lakcim="Cég utca 12",
fizetes=2121000,
szuletes="1996-03-12",
jutalom=500,
beosztasAz=6
where az=13112;



Reláció sémák:

szemelyek(az, nev, anyja_neve, telepules,
 lakcim, fizetes, szuletes, jutalom, beosztasAz)
beosztasok(az, nev, leiras)

Kódba:

create table beosztasok(
 az int not null primary key auto_increment,
 nev varchar(50),
 leiras text
 );



Két táblás gyakorlás:

--Jelenítsük meg a móri dolgozók nevét és beosztását.

select szemelyek.nev, beosztasok.nev
from szemelyek inner join beosztasok
on szemelyek.beosztasAz = beosztasok.az
where telepules="Mór";
















Unique

create database kontjarmu
character set utf8
collate utf8_hungarian_ci;

use kontjarmu;

create table jarmuvek (
	az int not null primary key,
	rendszam varchar(10) unique,
	marka varchar(50)
	);

insert into jarmuvek
(az, rendszam, marka)
values
(1, "ABC-123", "Opel");

insert into jarmuvek
(az, rendszam, marka)
values
(2, "ABC-123", "Opel");


















SQL:

@echo off
C:\xampp\mysql\bin\mysql -u root
pause

show databases;
create database sargabt;
use sargabt;
show tables;

create table ugyfelek(
	az int not null
	primary key
	auto_increment
	nev varchar(50)
);

("ugyfelek" tábla mezőit megnézni) desc ugyfelek;

(sorok beszúrása):
insert into ugyfelek
(nev, telepules, fizetes, beosztasAz)
values
("Tenger Zoltan", "Szeged", 283000, 5);


---A dolgozok nevei és fizetesek devecserrol
select nev as Név, fizetes as Fizetés	---nev és fizetes mezőből valasztunk
from szemelyek                       ---szemlyeke táblábol választunk
where telepules="Devecser";


---Hany dolgozo van devecserrol?
select(*)
from szemelyek
where telepules="Devecser";


---devecseriek osszes fizetese
select sum(fizetes)
as "Devecseri fizetesek osszesen"
from szemelyek
where telepules="Devecser";


----devecseri atlag fizetes
select avg(fizetes)
as "Devecseri dolgozok atlag fizetese"
from szemelyek
where telepules="Devecser";


---2 telepules kivalasztasa es egy adott fizetes alatti dolgozok
select nev, fizetes, telepules
from szemelyek
where (telepules="Miskolc" or telepules="Hatvan")
and fizetes > 300000;


---Mikolci dolgozok nevei es fizetesuk, fizetes szerint csokkeno sorrendbe
select nev, fizetes
from szemelyek
where telpules="Miskolc"
order by fizetes desc;


---Milyen telepulesekro lvannak dolgozok, akiknek a fizetesuk tobb mint 400k?
---telepulesek abc sorrendbe
select telepules
from szemelyek
where fizetes > 400k
group by telepules;


Adatok változtatása már meglevő adattal:


---A szolnoki dolgozok fizeteset megvaltoztatjuk 1500k-ra
update szemelyek
set
fizetes=1500k
where telepules="Szolnok";



---a nagykorosiek fizetese, ha kevesebb mint 100k akkor legyen 1800k
update szemelyek
set
fizetes=1800k
where telepules="Nagykoros"
and
fizetes < 100k;


---Milyen telepulesekrol vannak dolgozok
select telepules
from szemelyek
where fizetes < 30k
group by telepules
order by telepules


---Fizetesemeles
update szemelyek
set
fizetes = fizetes + 500k
where fizetes < 20k;


---Dolgozok akik fizetese 300k alatt van es "p" betus telepulesen lakank
select telepules, sum(fizetes)
from szemelyek
where
fizetes < 300k
and
telepules like "P%"
group by telepules
order by telepules;


---Az elso tiz ember akiknek 30k alatt van a fizetese
select telepules
from szemelyek
where
fizetes < 30k
order by telepules
limit 10;


---Megszabas de csak ott ahol (having) ..
select telepules, sum(fizetes)
from szemelyek
where
fizetes >800k
group by telepules
having
sum(fizetes)<2000k;








2022-03-08  (linuxon)

grant all privileges
on feherbt.*
to feherbtlocalhost
identified by 'titok';

quit

mariadb -u feherbt -p

create database feherbt
character set utf8
collate utf8_hungarian_ci;







2022-03-09

CREATE INDEX "indexnév" ON "táblanév" (...)

create database domosbt 
character set utf8 
collate utf8_hungarian_ci;
 
grant all privileges 
on domosbt.* 
to domosbt@localhost
identified by 'titok';
 
use domosbt;
 
create table dolgozok(
    az int not null primary key auto_increment,
    nev varchar(50),
    telepules varchar(50),
    fizetes double,
    jutalom double,
    belepes date
);
 
insert into dolgozok 
(nev, telepules, fizetes, jutalom, belepes)
values
('Prank Attila', 'Szeged', 2875000, 112000, '2000-01-01'),
('Lant Erzsébet', 'Szolnok', 2942000, 50000, '2000-02-01');

show tables;

desc dolgozok;

show indexes from dolgozok\G

CREATE INDEX fizetes_index ON dolgozok(fizetes);

--index törlése
drop index fizetes_index on dolgozok;

create database fer 
character set utf8 
collate utf8_hungarian_ci;
 
grant all privileges 
on fer.* 
to fer@localhost
identified by 'titok';
 
use fer;
 
create table dolgozok(
    az int not null primary key,
    nev varchar(50),
    telepules varchar(50),
    fizetes double
);
 
insert into dolgozok
values
(1,'Pardon Béla','Szolnok',2837000),
(2,'Lovas Beáta','Szeged',870500),
(3,'Pedro Péter','Szolnok',2837000),
(4,'Ton Irén','Szeged',2837000),
(5,'Frank Olivér','Szolnok',2837000),
(6,'Lapos Bence','Miskolc',2837000),
(7,'Kerek Katalin','Miskolc',1870000),
(8,'Pardon Béla','Hatvan',1537000),
(9,'Pardon Béla','Szeged',1400000);

select * from dolgozok;

explain select * from dolgozok;

explain select * from dolgozok\G

create index telepules_index on dolgozok(telepules);

EXPLAIN select * from dolgozok where telepules="szeged"\G

create index fizetes_index on dolgozok(fizetes);

EXPLAIN select * from dolgozok where telepules="szeged"\G

select fizetes from dolgozok;

select max(fizetes) from dolgozok;

select min(fizetes) from dolgozok;

select fizetes from dolgozok ordery by fizetes asc;

select fizetes from dolgozok ordery by fizetes asc limit 1;

select fizetes from dolgozok ordery by fizetes desc limit 1;

update dolgozok set nev="Pardon Imre" where az=1;

select nev, fizetes from dolgozok order by fizetes asc limit 1;


Jelenítsuk meg hogy van e szolnoki zalaegerszeegi es hatvani dolgozokat
select nev, telepules from dolgozok where telepules in ("Szolnok", "Zalaegerszeg", "Hatvan");

Jelenítse meg azoknak a dolgozoknak a neveit akinek a fizetese tobb mint 2 millio es szolnokon vagy szegeden laknak
select nev, fizetes from dolgozok where fizetes > 2000000 and telepules in ("Szolnok", "Szeged");

insert into dolgozok (nev, telepules, fizetes, az) values ("Csoport Árpád", null, 1500000, 10);
insert into dolgozok (nev, telepules, fizetes, az) values ("Alapos Ferebc", Szeged, null, 11);

select * from dolgozok;

Irassa ki annak a dolgoonak az adatatit akinek ninc smegadva telepules.
select * from dolgozok where telepules is null;

insert into dolgozok (nev, telepules, fizetes, az) values ("Alapos Ferebc", "Szeged", null, 11)






========================================
2022-03-16
========================================
(Ahol a település ismert, csak azt szeretnénk megjeleníteni)
select * from dolgozok
where telepules is not null;



fer adatbázis

(elenítsen meg minden dolgozot, akinek a fizetése nagyobb mint 2 millio es nem szolnokon laknak)
select nev, telepules, fizetes
from dolgozok
where
fizetes>2000000
and telepules != "Szolnok";                     = and telepules <> "Szolnok";


(jelenitse meg azokat a dolgozokat akiknek nincs beallitva  fizetese)
select * 
from dolgozok 
where 
fizetes is null;


(jeelnitse meg azokat a dolgozokat akiknek se fzetese se teelpulese nincs beallitva)
insert into dolgozok
(az, nev)
values
(12,"Pontos Ádám"),
(13,"Rejtő Jenő"),
(14,"Almás Péter");


(vegyen fel uj oszlopot a dolgozok tablaba)
alter table dolgozok add telefon varchar(20);


(vegye fel az 1-s dolgozonak a kovetkezo telefonszamot: 83 824-3432)
update dolgozok
set telefon = "83 824-3432"
where az = 1


replace() függvény

select nev, replace(telefon, ' ', '/ ') telefon from dolgozok;



substring() FÜGGVÉNY

select substring()

select nev, concat("(",telefon)
from dolgozok;



select nev, replace(concat("(",telefon), ' ', ') ' )
from dolgozok;

